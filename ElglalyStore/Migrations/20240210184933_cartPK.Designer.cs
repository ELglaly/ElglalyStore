// <auto-generated />
using System;
using ElglalyStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElglalyStore.Migrations
{
    [DbContext(typeof(Appdbcontext))]
    [Migration("20240210184933_cartPK")]
    partial class cartPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElglalyStore.Models.Cart", b =>
                {
                    b.Property<int>("cart_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cart_Id"));

                    b.Property<int>("Cart_product_id")
                        .HasColumnType("int");

                    b.Property<int>("Cart_custmer_id")
                        .HasColumnType("int");

                    b.Property<int>("Cart_quantity")
                        .HasColumnType("int");

                    b.HasKey("cart_Id", "Cart_product_id");

                    b.HasIndex("Cart_custmer_id");

                    b.HasIndex("Cart_product_id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ElglalyStore.Models.Category", b =>
                {
                    b.Property<int>("category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_Id"));

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("category_Id");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("ElglalyStore.Models.Customer", b =>
                {
                    b.Property<int>("customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_Id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fisrt_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("customer_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ElglalyStore.Models.Order", b =>
                {
                    b.Property<int>("order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_Id"));

                    b.Property<int>("customer_product_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("order_payment_id")
                        .HasColumnType("int");

                    b.Property<decimal>("total_price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("order_Id");

                    b.HasIndex("customer_product_id");

                    b.HasIndex("order_payment_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ElglalyStore.Models.Order_item", b =>
                {
                    b.Property<int>("order_item_Id")
                        .HasColumnType("int");

                    b.Property<int>("order_order_item")
                        .HasColumnType("int");

                    b.Property<int>("order_product_id")
                        .HasColumnType("int");

                    b.Property<int>("order_quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("order_item_Id", "order_order_item");

                    b.HasIndex("order_order_item");

                    b.HasIndex("order_product_id");

                    b.ToTable("Orderitems");
                });

            modelBuilder.Entity("ElglalyStore.Models.Payment", b =>
                {
                    b.Property<int>("payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_Id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("payment_customer_id")
                        .HasColumnType("int");

                    b.HasKey("payment_Id");

                    b.HasIndex("payment_customer_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ElglalyStore.Models.Product", b =>
                {
                    b.Property<int>("product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_Id"));

                    b.Property<int>("product_category_id")
                        .HasColumnType("int");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("product_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("product_price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("product_Id");

                    b.HasIndex("product_category_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ElglalyStore.Models.Cart", b =>
                {
                    b.HasOne("ElglalyStore.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("Cart_custmer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElglalyStore.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("Cart_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ElglalyStore.Models.Order", b =>
                {
                    b.HasOne("ElglalyStore.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customer_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElglalyStore.Models.Payment", "payment")
                        .WithMany()
                        .HasForeignKey("order_payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");

                    b.Navigation("payment");
                });

            modelBuilder.Entity("ElglalyStore.Models.Order_item", b =>
                {
                    b.HasOne("ElglalyStore.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("order_order_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElglalyStore.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("order_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ElglalyStore.Models.Payment", b =>
                {
                    b.HasOne("ElglalyStore.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("payment_customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("ElglalyStore.Models.Product", b =>
                {
                    b.HasOne("ElglalyStore.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("product_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
